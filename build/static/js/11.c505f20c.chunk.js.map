{"version":3,"sources":["components/FlexBox/FlexBox.ts","components/Button/Button.tsx","components/Button/Button.style.tsx","components/Input/Input.tsx","context/DrawerContext.tsx","assets/icons/CaretDownIcon.tsx","components/Select/Select.tsx","context/create-context.tsx","components/Wrapper.style.tsx","components/NoResult/no-result.svg","components/NoResult/NoResult.style.tsx","components/NoResult/NoResult.tsx","components/CheckBox/CheckBox.tsx","components/ProgressBar/ProgressBar.tsx","assets/icons/PlusMinus.tsx","containers/Coupons/Coupon.style.tsx","containers/Coupons/Coupons.tsx"],"names":["Grid","styled","Grids","Row","Rows","margin","marginBottom","Col","Cols","padding","Button","children","overrides","props","BaseButton","style","$theme","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","value","buttonBorderRadius","SHAPE","pill","round","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","getBorderRadiiStyles","Input","color","colors","textDark","typography","fontBold16","getInputFontStyle","useCreateContext","isOpen","drawerComponent","data","state","action","type","useDrawerState","useDrawerDispatch","DrawerProvider","CaretDownIcon","xmlns","width","height","viewBox","data-name","d","transform","fill","getContainerFontStyle","fontBold14","SelectArrow","Popover","Body","zIndex","Placeholder","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","defaultValue","reducer","stateCtx","createContext","dispatchCtx","property","useContext","React","useReducer","dispatch","Provider","Wrapper","backgroundColor","Header","display","justifyContent","alignItems","flex","flexDirection","flexWrap","Heading","fontBold18","paddingTop","module","exports","NoResultWrapper","h3","p","ImageWrapper","marginTop","maxWidth","img","ButtonWrapper","cursor","borderRadius","fontFamily","textDecoration","textTransform","border","transition","NoResult","id","onClick","hideButton","src","NoResultSvg","alt","Object","freeze","top","right","bottom","left","Checkbox","ProgressBar","Plus","rx","Status","content","borders","borderE6","marginRight","TableWrapper","StyledTable","withStyle","BaseStyledTable","alignContent","StyledHeadCell","BaseStyledHeadCell","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","StyledBodyCell","BaseStyledCell","ProgressWrapper","ProgressText","font13","primaryFontFamily","GET_COUPONS","gql","themedUseStyletron","createThemedUseStyletron","Column","statusSelectOptions","label","Coupons","useState","checkedId","setCheckedId","checked","setChecked","openDrawer","useCallback","status","setStatus","search","setSearch","useCss","theme","active","primary","revoked","red400","useQuery","error","refetch","message","handleCheckbox","event","name","currentTarget","includes","prevState","filter","fluid","md","Select","options","labelKey","valueKey","placeholder","searchable","onChange","length","searchBy","clearable","startEnhancer","$gridTemplateColumns","target","idx","coupons","map","coupon","Checkmark","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","item","values","row","index","Fragment","key","num","total","successValue","Bar","marginLeft","position","BarProgress","dayjs","format","className","gridColumnStart","gridColumnEnd"],"mappings":"+HAAA,4HAUaA,EAAOC,YAAOC,OAAO,UAErBC,EAAMF,YAAOG,MAAM,MAC9BC,OAAQ,eAER,cAAe,CACbC,aAAc,UAILC,EAAMN,YAAOO,MAAM,MAC9BC,QAAS,a,2HCKIC,IAtBC,IAA4C,IAA1CC,EAAyC,EAAzCA,SAAUC,EAA+B,EAA/BA,UAAcC,EAAiB,wCACzD,OACE,kBAAC,IAAD,iBACMA,EADN,CAEED,UAAS,aACPE,WAAY,CACVC,MAAO,EAAGC,SAAQC,QAAOC,YAChB,2BCTa,GAAGF,SAAQC,YACzC,OAAQA,GACN,KAAKE,IAAKC,QAKV,KAAKD,IAAKE,MAKV,QACE,MAAO,CACLC,YAAaN,EAAOO,OAAOC,QAC3BC,aAAcT,EAAOO,OAAOC,WDLnBE,CAAiB,CAAEV,SAAQC,WCUR,GAAGD,SAAQC,QAAOC,aACpD,IAAIS,EAAQX,EAAOY,mBAcnB,OAZIV,IAAWW,IAAMC,KAEjBH,EADEV,IAAUE,IAAKC,QACT,OACCH,IAAUE,IAAKE,MAChB,OAEA,OAEDH,IAAWW,IAAME,QAC1BJ,EAAQ,OAGH,CACLK,qBAAsBL,EACtBM,wBAAyBN,EACzBO,oBAAqBP,EACrBQ,uBAAwBR,ID5BXS,CAAqB,CAAEpB,SAAQC,QAAOC,cAI5CN,KAGJD,K,sEEQQ0B,IAlBA,IAAkB,IAAbxB,EAAY,oBAC9B,OACE,kBAAC,IAAD,eACED,UAAW,CACTyB,MAAO,CACLtB,MAAO,EAAGC,YACD,eAbO,GAAGA,YACpB,aACLsB,MAAOtB,EAAOuB,OAAOC,UAClBxB,EAAOyB,WAAWC,YAWRC,CAAkB,CAAE3B,eAK3BH,M,0KCOkD+B,YA3BvC,CACnBC,QAAQ,EACRC,gBAAiB,KACjBC,KAAM,OAIR,SAAiBC,EAAcC,GAC7B,OAAQA,EAAOC,MACb,IAAK,cACH,OAAO,2BACFF,GADL,IAEEH,QAAQ,EACRC,gBAAiBG,EAAOH,gBACxBC,KAAME,EAAOF,OAEjB,IAAK,eACH,OAAO,2BACFC,GADL,IAEEH,QAAQ,EACRC,gBAAiB,KACjBC,KAAM,OAEV,QACE,OAAOC,M,mBAGNG,E,KAAgBC,E,KAAmBC,E,4EC5B7BC,EAAgB,IAEzB,yBACEC,MAAM,6BACNC,MAAM,KACNC,OAAO,IACPC,QAAQ,YAER,0BACEC,YAAU,sCACVC,EAAE,oBACFC,UAAU,uBACVC,KAAK,kBCTAC,EAAwB,EAAG/C,YAC/BA,EAAOyB,WAAWuB,WAGZ,QAAmB,IAAbnD,EAAY,oBAC/B,OACE,gBAAC,IAAD,eACED,UAAW,CACTqD,YAAa,IACJ,gBAACX,EAAD,MAETY,QAAS,CACPrD,MAAO,CACLD,UAAW,CACTuD,KAAM,CACJpD,MAAO,CAAEqD,OAAQ,OAKzBC,YAAa,CACXtD,MAAO,EAAGC,YAAH,aACLsB,MAAOtB,EAAOuB,OAAOC,UAClBuB,EAAsB,CAAE/C,aAG/BsD,YAAa,CACXvD,MAAO,EAAGC,YAAH,YAAC,eACH+C,EAAsB,CAAE/C,YADtB,IAELsB,MAAOtB,EAAOuB,OAAOC,SACrB+B,WAAY,SAGhBC,iBAAkB,CAChBzD,MAAO,EAAGC,aAAH,CACLyD,SAAU,OACVC,WAAY,MACZpC,MAAOtB,EAAOuB,OAAOC,YAGzBmC,cAAe,CACb5D,MAAO,EAAGC,SAAQ4D,eACT,2BACF5D,EAAOyB,WAAWuB,YADvB,IAEE1B,MAAOsC,EACH5D,EAAOuB,OAAOC,SACdxB,EAAOuB,OAAOsC,cAIxBC,eAAgB,CACd/D,MAAO,EAAGC,aAAH,CACLyD,SAAU,OACVC,WAAY,MACZpC,MAAOtB,EAAOuB,OAAOC,cAIvB3B,M,+FC5DH,SAAS+B,EACdmC,EACAC,GAEA,IACMC,EAAWC,wBAAcH,GACzBI,EAAcD,wBAFiB,IAAMH,GAqB3C,MAAO,CAjBP,SAAwCK,GAEtC,OADcC,qBAAWJ,GACZG,IAGf,WACE,OAAOC,qBAAWF,IAGpB,UAAkB,SAAExE,IAA0C,IAAD,EACjC2E,IAAMC,WAAWP,EAASD,GADO,mBACpD/B,EADoD,KAC7CwC,EAD6C,KAE3D,OACE,kBAACL,EAAYM,SAAb,CAAsB9D,MAAO6D,GAC3B,kBAACP,EAASQ,SAAV,CAAmB9D,MAAOqB,GAAQrC,Q,4JCrB7B+E,EAAUzF,YAAO,MAAO,MACnC0F,gBAAiB,aAGNC,EAAS3F,YAAO,SAAU,MACrC4F,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,KAAM,WACNC,cAAe,MACfC,SAAU,OACVzF,QAAS,OAETkF,gBAAiB,UAEjB,4CAA6C,CAC3ClF,QAAS,WAIA0F,EAAUlG,YAAO,KAAM,EAAGe,YAAH,YAAC,eAChCA,EAAOyB,WAAW2D,YADa,IAElC9D,MAAOtB,EAAOuB,OAAOC,SACrBnC,OAAQ,KAGmBJ,YAAO,MAAO,EAAGe,aAAH,CACzC6E,QAAS,OACTC,eAAgB,gBAChBO,WAAY,W,oBC/BdC,EAAOC,QAAU,IAA0B,uC,gFCE9BC,EAAkBvG,YAAO,MAAO,MAC3CuD,MAAO,OACPqC,QAAS,OACTI,cAAe,SACfF,WAAY,SACZtF,QAAS,YAETgG,GAAI,CACFhC,SAAU,OACVC,WAAY,IACZpC,MAAO,UACPjC,OAAQ,YAGVqG,EAAG,CACDjC,SAAU,OACVC,WAAY,IACZpC,MAAO,UACPjC,OAAQ,MAICsG,EAAe1G,YAAO,MAAO,MACxC2G,UAAW,OACXpD,MAAO,OACPqD,SAAU,QACVhB,QAAS,OACTE,WAAY,SACZD,eAAgB,SAEhBgB,IAAK,CACHD,SAAU,WAIDE,EAAgB9G,YAAO,MAAO,MACzCuD,MAAO,OACPqC,QAAS,OACTC,eAAgB,SAChBc,UAAW,U,GAGS3G,YAAO,SAAU,MACrC+G,OAAQ,UACRnB,QAAS,cACTE,WAAY,SACZD,eAAgB,SAChBxD,MAAO,UACPqD,gBAAiB,UACjBlC,OAAQ,OACRwD,aAAc,MACdC,WAAW,qBACXzC,SAAU,OACVC,WAAY,IACZyC,eAAgB,OAChBC,cAAe,aACf3G,QAAS,SACT4G,OAAQ,EACRC,WAAY,mB,QCnBCC,IA5B2B,EACxCC,KACAC,UACAC,cAAa,EACb3G,WAGE,kBAACyF,EAAD,CAAiBgB,GAAIA,EAAIzG,MAAOA,GAC9B,yDAEA,kBAAC4F,EAAD,KACE,yBAAKgB,IAAKC,IAAaC,IAAI,eAG5BH,EACC,kBAACX,EAAD,KACE,yBAAKU,QAASA,GACZ,kBAAC,IAAD,0BAMF,O,iCCpCV,6BAI+BK,OAAOC,OAAO,CAC3CC,IAAK,MACLC,MAAO,QACPC,OAAQ,SACRC,KAAM,SAOOC,IAJG,IAAkB,IAAbvH,EAAY,oBACjC,OAAO,kBAAC,IAAiBA,K,iCCZ3B,oBAOewH,IAJM,IAAkB,IAAbxH,EAAY,oBACpC,OAAO,gBAAC,IAAkBA,K,iCCJ5B,sDAEayH,EAAO,EAClBhG,QAAQ,eACRkB,QAAQ,OACRC,SAAS,UAGP,yBACEF,MAAM,6BACNC,MAAOA,EACPC,OAAQA,EACRC,QAAQ,aAER,uBACE8D,GAAG,aACH7D,YAAU,aACVE,UAAU,yBAEV,0BACEF,YAAU,gBACVH,MAAM,KACNC,OAAO,IACP8E,GAAG,IACH1E,UAAU,sBACVC,KAAMxB,IAER,0BACEqB,YAAU,gBACVH,MAAM,KACNC,OAAO,IACP8E,GAAG,IACH1E,UAAU,iCACVC,KAAMxB,O,0PC1BHkG,EAASvI,YAAO,MAAO,EAAGe,YAAH,YAAC,eAChCA,EAAOyB,WAAWuB,YADa,IAElC1B,MAAOtB,EAAOuB,OAAOC,SACrBqD,QAAS,OACTE,WAAY,SACZxB,WAAY,IACZ6C,cAAe,aAEf,UAAW,CACTqB,QAAS,KACTjF,MAAO,OACPC,OAAQ,OACRoC,QAAS,eACToB,aAAc,OACdtB,gBAAiB3E,EAAO0H,QAAQC,SAChCC,YAAa,WAIJC,EAAe5I,YAAO,MAAO,MACxCuD,MAAO,OACPC,OAAQ,WAGGqF,EAAcC,YAAUC,IAAiB,MACpD9G,oBAAqB,eACrBF,qBAAsB,eACtBG,uBAAwB,eACxBF,wBAAyB,eACzBgH,aAAc,WAGHC,EAAiBH,YAAUI,IAAoB,MAC1DjC,WAAY,qBACZxC,WAAY,IACZpC,MAAO,qBACPyD,WAAY,SACZqD,UAAW,kCACXC,eAAgB,sBAChBC,iBAAkB,sBAClBC,kBAAmB,sBACnBC,gBAAiB,sBACjBC,UAAW,QACXrF,OAAQ,KAGGsF,EAAiBX,YAAUY,IAAgB,MACtDzC,WAAY,qBACZxC,WAAY,IACZpC,MAAO,qBACPmH,UAAW,YAGAG,EAAkB3J,YAAO,MAAO,MAC3CuD,MAAO,OACPqC,QAAS,OACTI,cAAe,YAGJ4D,EAAe5J,YAAO,OAAQ,EAAGe,YAAH,YAAC,eACvCA,EAAOyB,WAAWqH,QADoB,IAEzC5C,WAAYlG,EAAOyB,WAAWsH,kBAC9BxF,WAAY,MACZjC,MAAOtB,EAAOuB,OAAOC,Y,6VC3CvB,IAAMwH,EAAcC,cAAH,KAgBXC,EAAqBC,cAErB5J,EAAMwI,YAAUqB,IAAQ,MAC5B,4CAA6C,CAC3C9J,aAAc,OAEd,cAAe,CACbA,aAAc,OAKdH,EAAM4I,YAAU3I,IAAM,MAC1B,4CAA6C,CAC3C2F,WAAY,aAIVsE,EAAsB,CAC1B,CAAE1I,MAAO,SAAU2I,MAAO,UAC1B,CAAE3I,MAAO,UAAW2I,MAAO,YAGd,SAASC,IACtB,IAAM/E,EAAWpC,cADe,EAEEoH,mBAAS,IAFX,mBAEzBC,EAFyB,KAEdC,EAFc,OAGFF,oBAAS,GAHP,mBAGzBG,EAHyB,KAGhBC,EAHgB,KAK1BC,EAAaC,sBACjB,IAAMtF,EAAS,CAAEtC,KAAM,cAAeJ,gBAAiB,kBACvD,CAAC0C,IAP6B,EASJgF,mBAAS,IATL,mBASzBO,EATyB,KASjBC,EATiB,OAUJR,mBAAS,IAVL,mBAUzBS,EAVyB,KAUjBC,EAViB,OAWRhB,IAXQ,mBAWzBiB,EAXyB,KAWjBC,EAXiB,KAY1BC,EAASF,EAAO,CACpB,UAAW,CACT1C,QAAS,KACT9C,gBAAiByF,EAAM7I,OAAO+I,WAG5BC,EAAUJ,EAAO,CACrB,UAAW,CACT1C,QAAS,KACT9C,gBAAiByF,EAAM7I,OAAOiJ,UArBF,EAyBCC,mBAASzB,GAAlCjH,EAzBwB,EAyBxBA,KAAM2I,EAzBkB,EAyBlBA,MAAOC,GAzBW,EAyBXA,QACrB,GAAID,EACF,OAAO,uCAAaA,EAAME,SA8B5B,SAASC,GAAeC,GAAQ,IACtBC,EAASD,EAAME,cAAfD,KACHtB,EAAUwB,SAASF,GAGtBrB,EAAcwB,GAAcA,EAAUC,OAAQ3E,GAAOA,IAAOuE,IAF5DrB,EAAcwB,GAAc,IAAIA,EAAWH,IAU/C,OACE,kBAAC,IAAD,CAAMK,OAAO,GACX,kBAACjM,EAAD,KACE,kBAACI,EAAD,CAAK8L,GAAI,IACP,kBAAC,IAAD,CACEtL,MAAO,CACLT,aAAc,GACd8I,UAAW,gCAGb,kBAAC7I,EAAD,CAAK8L,GAAI,GACP,kBAAC,IAAD,mBAGF,kBAAC9L,EAAD,CAAK8L,GAAI,IACP,kBAAClM,EAAD,KACE,kBAACI,EAAD,CAAK8L,GAAI,GACP,kBAACC,EAAA,EAAD,CACEC,QAASlC,EACTmC,SAAS,QACTC,SAAS,QACTC,YAAY,SACZ/K,MAAOoJ,EACP4B,YAAY,EACZC,SAjElB,UAAsB,MAAEjL,IACtBqJ,EAAUrJ,GACNA,EAAMkL,OACRlB,GAAQ,CAAEZ,OAAQpJ,EAAM,GAAGA,MAAOmL,SAAU7B,IAE5CU,GAAQ,CAAEZ,OAAQ,WAgER,kBAACxK,EAAD,CAAK8L,GAAI,GACP,kBAAChK,EAAA,EAAD,CACEV,MAAOsJ,EACPyB,YAAY,qBACZE,SAhElB,SAAsBd,GACpB,IAAMnK,EAAQmK,EAAME,cAAcrK,MAElCuJ,EAAUvJ,GACVgK,GAAQ,CACNZ,OAAQA,EAAO8B,OAAS9B,EAAO,GAAGpJ,MAAQ,KAC1CmL,SAAUnL,KA2DIoL,WAAS,KAIb,kBAACxM,EAAD,CAAK8L,GAAI,GACP,kBAAC3L,EAAA,EAAD,CACE+G,QAASoD,EACTmC,cAAe,IAAM,kBAAC,IAAD,MACrBpM,UAAW,CACTE,WAAY,CACVC,MAAO,EAAGC,SAAQC,QAAOC,aAChB,CACLsC,MAAO,OACPtB,oBAAqB,MACrBF,qBAAsB,MACtBG,uBAAwB,MACxBF,wBAAyB,WAXnC,uBAwBR,kBAAC,IAAD,CAASlB,MAAO,CAAEqI,UAAW,iCAC3B,kBAACP,EAAD,KACE,kBAACC,EAAD,CAAamE,qBAAqB,wKAChC,kBAAC/D,EAAD,KACE,kBAAC,IAAD,CACEhG,KAAK,WACLvB,MAAM,WACNgJ,QAASA,EACTiC,SA7FlB,SAAoBd,GAClB,GAAIA,EAAMoB,OAAOvC,QAAS,CACxB,IAAMwC,EAAMpK,GAAQA,EAAKqK,QAAQC,IAAKC,GAAWA,EAAO9F,IACxDkD,EAAayC,QAEbzC,EAAa,IAEfE,EAAWkB,EAAMoB,OAAOvC,UAuFR/J,UAAW,CACT2M,UAAW,CACTxM,MAAO,CACLyM,eAAgB,MAChBC,iBAAkB,MAClBC,kBAAmB,MACnBC,gBAAiB,MACjBzL,oBAAqB,MACrBF,qBAAsB,MACtBC,wBAAyB,MACzBE,uBAAwB,YAMlC,kBAAC+G,EAAD,WACA,kBAACA,EAAD,uBACA,kBAACA,EAAD,aACA,kBAACA,EAAD,yBACA,kBAACA,EAAD,wBACA,kBAACA,EAAD,sBACA,kBAACA,EAAD,eAECnG,EACCA,EAAKqK,QAAQP,OACX9J,EAAKqK,QACFC,IAAKO,GAAS9F,OAAO+F,OAAOD,IAC5BP,IAAI,CAACS,EAAKC,KACT,OACE,kBAAC,IAAMC,SAAP,CAAgBC,IAAKF,GACnB,kBAACrE,EAAD,KACE,kBAAC,IAAD,CACEqC,KAAM+B,EAAI,GACVnD,QAASF,EAAUwB,SAAS6B,EAAI,IAChClB,SAAUf,GACVjL,UAAW,CACT2M,UAAW,CACTxM,MAAO,CACLyM,eAAgB,MAChBC,iBAAkB,MAClBC,kBAAmB,MACnBC,gBAAiB,MACjBzL,oBAAqB,MACrBF,qBAAsB,MACtBC,wBAAyB,MACzBE,uBAAwB,YAMlC,kBAACuH,EAAD,KAAiBoE,EAAI,IACrB,kBAACpE,EAAD,KAAiBoE,EAAI,IACrB,kBAACpE,EAAD,KAAiBoE,EAAI,IACrB,kBAACpE,EAAD,KACE,kBAACE,EAAD,KACE,kBAACvB,EAAA,EAAD,CACE1G,OArIPuM,EAqI8BJ,EAAI,GArI7BK,EAqIiCL,EAAI,GApInD,IAANI,EAAaC,GAqISC,aAAc,IACdxN,UAAW,CACTyN,IAAK,CACHtN,MAAO,KACE,CACL4E,gBAAiB,UACjB2I,WAAY,MACZ1F,YAAa,MACbnF,OAAQ,MACRvB,oBAAqB,MACrBF,qBAAsB,MACtBG,uBAAwB,MACxBF,wBAAyB,MACzBsM,SAAU,cAIhBC,YAAa,CACXzN,MAAO,EAAGC,aACD,CACL2E,gBACE3E,EAAOuB,OAAO+I,QAChBpJ,oBAAqB,MACrBF,qBAAsB,MACtBG,uBAAwB,MACxBF,wBAAyB,YAOnC,kBAAC4H,EAAD,eAAkBiE,EAAI,GAAKA,EAAI,GAAK,EAApC,eACEA,EAAI,GADN,uBAKJ,kBAACpE,EAAD,KACG+E,IAAMX,EAAI,IAAIY,OAAO,gBAExB,kBAAChF,EAAD,KACG+E,IAAMX,EAAI,IAAIY,OAAO,gBAExB,kBAAChF,EAAD,KACE,kBAAClB,EAAD,CACEmG,UACa,WAAXb,EAAI,GACAzC,EACW,YAAXyC,EAAI,GACJvC,EACA,IAGLuC,EAAI,MA3LX,IAACI,EAAKC,IAkMZ,kBAAC5G,EAAA,EAAD,CACEG,YAAY,EACZ3G,MAAO,CACL6N,gBAAiB,IACjBC,cAAe,SAInB","file":"static/js/11.c505f20c.chunk.js","sourcesContent":["import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold16,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import { useCreateContext } from \"./create-context\";\n\nconst initialState = {\n  isOpen: false,\n  drawerComponent: null,\n  data: null,\n};\ntype State = typeof initialState;\ntype Action = any;\nfunction reducer(state: State, action: Action) {\n  switch (action.type) {\n    case \"OPEN_DRAWER\":\n      return {\n        ...state,\n        isOpen: true,\n        drawerComponent: action.drawerComponent,\n        data: action.data,\n      };\n    case \"CLOSE_DRAWER\":\n      return {\n        ...state,\n        isOpen: false,\n        drawerComponent: null,\n        data: null,\n      };\n    default:\n      return state;\n  }\n}\nconst [useDrawerState, useDrawerDispatch, DrawerProvider] = useCreateContext(\n  initialState,\n  reducer\n);\n\nexport { useDrawerState, useDrawerDispatch, DrawerProvider };\n","import React from 'react';\nexport const CaretDownIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='10'\n      height='5'\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill='currentColor'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from 'assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React, { Reducer, Dispatch, useContext, createContext } from 'react';\n\nexport function useCreateContext<S, A>(\n  defaultValue: S,\n  reducer: Reducer<S, A>\n) {\n  const defaultDispatch: Dispatch<A> = () => defaultValue;\n  const stateCtx = createContext(defaultValue);\n  const dispatchCtx = createContext(defaultDispatch);\n\n  function useStateCtx<K extends keyof S>(property: K) {\n    const state = useContext(stateCtx);\n    return state[property]; // only one depth selector for comparison\n  }\n\n  function useDispatchCtx() {\n    return useContext(dispatchCtx);\n  }\n\n  function Provider({ children }: React.PropsWithChildren<{}>) {\n    const [state, dispatch] = React.useReducer(reducer, defaultValue);\n    return (\n      <dispatchCtx.Provider value={dispatch}>\n        <stateCtx.Provider value={state}>{children}</stateCtx.Provider>\n      </dispatchCtx.Provider>\n    );\n  }\n  return [useStateCtx, useDispatchCtx, Provider] as const;\n}\n\n// const [useTextState, useTextDispatch, TextProvider] = useCreateContext(initialState, reducer);\n// export const TextContext = ctx;\n// export function App() {\n//   return (\n//     <TextProvider>\n//       <Component />\n//     </TextProvider>\n//   )\n// }\n// export function Component() {\n//   const state = useTextState('state')\n//   const dispatch = useTextDispatch()\n// const increment = useCallback(() => dispatch({ type: 'increment' }), [dispatch]);\n//   return (\n//     <div>\n//       {state}\n//       <button onClick={increment}>Toggle</button>\n//     </div>\n//   )\n// }\n","import { styled } from 'baseui';\n\nexport const Wrapper = styled('div', () => ({\n  backgroundColor: '#ffffff',\n}));\n\nexport const Header = styled('header', () => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flex: '0 1 auto',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  padding: '40px',\n  /* margin-bottom: 40px, */\n  backgroundColor: '#ffffff',\n\n  '@media only screen and (max-width: 990px)': {\n    padding: '20px',\n  },\n}));\n\nexport const Heading = styled('h2', ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  color: $theme.colors.textDark,\n  margin: 0,\n}));\n\nexport const ButtonWrapper = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  paddingTop: '20px',\n}));\n","module.exports = __webpack_public_path__ + \"static/media/no-result.e1457eaf.svg\";","import { styled } from 'baseui';\n\nexport const NoResultWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '50px 20px',\n\n  h3: {\n    fontSize: '24px',\n    fontWeight: 700,\n    color: '#161f6a',\n    margin: '0 0 15px',\n  },\n\n  p: {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: '#707070',\n    margin: 0,\n  },\n}));\n\nexport const ImageWrapper = styled('div', () => ({\n  marginTop: '50px',\n  width: '100%',\n  maxWidth: '600px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  img: {\n    maxWidth: '100%',\n  },\n}));\n\nexport const ButtonWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n}));\n\nexport const Button = styled('button', () => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#ffffff',\n  backgroundColor: '#009e7f',\n  height: '50px',\n  borderRadius: '3px',\n  fontFamily: `'Lato', sans-serif`,\n  fontSize: '16px',\n  fontWeight: 700,\n  textDecoration: 'none',\n  textTransform: 'capitalize',\n  padding: '0 30px',\n  border: 0,\n  transition: 'all 0.3s ease',\n}));\n","import React from \"react\";\nimport NoResultSvg from \"./no-result.svg\";\nimport { NoResultWrapper, ImageWrapper, ButtonWrapper } from \"./NoResult.style\";\nimport Button from \"../Button/Button\";\n// import { ArrowPrev } from '../AllSvgIcon';\n\ntype NoResultProps = {\n  id?: string;\n  onClick?: () => void;\n  hideButton?: boolean;\n  style?: any;\n};\n\nconst NoResult: React.FC<NoResultProps> = ({\n  id,\n  onClick,\n  hideButton = true,\n  style\n}) => {\n  return (\n    <NoResultWrapper id={id} style={style}>\n      <h3>Sorry, No result found :(</h3>\n\n      <ImageWrapper>\n        <img src={NoResultSvg} alt=\"No Result\" />\n      </ImageWrapper>\n\n      {hideButton ? (\n        <ButtonWrapper>\n          <div onClick={onClick}>\n            <Button>\n              Try Again Later\n              {/* <ArrowPrev /> Go Back */}\n            </Button>\n          </div>\n        </ButtonWrapper>\n      ) : null}\n    </NoResultWrapper>\n  );\n};\n\nexport default NoResult;\n","import React from 'react';\nimport { Checkbox as BaseCheckbox } from 'baseui/checkbox';\nexport { STYLE_TYPE } from 'baseui/checkbox';\n\nexport const LABEL_PLACEMENT = Object.freeze({\n  top: 'top',\n  right: 'right',\n  bottom: 'bottom',\n  left: 'left',\n});\n\nconst Checkbox = ({ ...props }) => {\n  return <BaseCheckbox {...props} />;\n};\n\nexport default Checkbox;\n","import * as React from 'react';\nimport { ProgressBar as BWProgressBar } from 'baseui/progress-bar';\n\nconst ProgressBar = ({ ...props }) => {\n  return <BWProgressBar {...props} />;\n};\n\nexport default ProgressBar;\n","import React from 'react';\n// SVG plus icon\nexport const Plus = ({\n  color = 'currentColor',\n  width = '12px',\n  height = '12px',\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 12 12\"\n    >\n      <g\n        id=\"Group_3351\"\n        data-name=\"Group 3351\"\n        transform=\"translate(-1367 -190)\"\n      >\n        <rect\n          data-name=\"Rectangle 520\"\n          width=\"12\"\n          height=\"2\"\n          rx=\"1\"\n          transform=\"translate(1367 195)\"\n          fill={color}\n        />\n        <rect\n          data-name=\"Rectangle 521\"\n          width=\"12\"\n          height=\"2\"\n          rx=\"1\"\n          transform=\"translate(1374 190) rotate(90)\"\n          fill={color}\n        />\n      </g>\n    </svg>\n  );\n};\n\n// SVG minus icon\nexport const Minus = ({\n  color = 'currentColor',\n  width = '12px',\n  height = '2px',\n}) => {\n  return (\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width={width}\n      height={height}\n      viewBox=\"0 0 12 2\"\n    >\n      <rect\n        data-name=\"Rectangle 522\"\n        width=\"12\"\n        height=\"2\"\n        rx=\"1\"\n        fill={color}\n      />\n    </svg>\n  );\n};\n","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const Status = styled('div', ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  color: $theme.colors.textDark,\n  display: 'flex',\n  alignItems: 'center',\n  lineHeight: '1',\n  textTransform: 'capitalize',\n\n  ':before': {\n    content: '\"\"',\n    width: '10px',\n    height: '10px',\n    display: 'inline-block',\n    borderRadius: '10px',\n    backgroundColor: $theme.borders.borderE6,\n    marginRight: '10px',\n  },\n}));\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '450px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\n\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  zIndex: 1,\n}));\n\nexport const StyledBodyCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n}));\n\nexport const ProgressWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n}));\n\nexport const ProgressText = styled('span', ({ $theme }) => ({\n  ...$theme.typography.font13,\n  fontFamily: $theme.typography.primaryFontFamily,\n  lineHeight: '1.2',\n  color: $theme.colors.textDark,\n}));\n","import React, { useCallback, useState } from 'react';\nimport dayjs from 'dayjs';\nimport { withStyle, createThemedUseStyletron } from 'baseui';\nimport { Grid, Row as Rows, Col as Column } from 'components/FlexBox/FlexBox';\nimport { useDrawerDispatch } from 'context/DrawerContext';\nimport ProgressBar from 'components/ProgressBar/ProgressBar';\n\nimport Select from 'components/Select/Select';\nimport Input from 'components/Input/Input';\nimport Button from 'components/Button/Button';\n\nimport { Plus } from 'assets/icons/PlusMinus';\nimport { useQuery, gql } from '@apollo/client';\nimport { Wrapper, Header, Heading } from 'components/Wrapper.style';\nimport Checkbox from 'components/CheckBox/CheckBox';\n\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledBodyCell,\n  ProgressWrapper,\n  ProgressText,\n  Status,\n} from './Coupon.style';\nimport NoResult from 'components/NoResult/NoResult';\n\nconst GET_COUPONS = gql`\n  query getCoupons($status: String, $searchBy: String) {\n    coupons(status: $status, searchBy: $searchBy) {\n      id\n      title\n      code\n      number_of_used_coupon\n      number_of_coupon\n      expiration_date\n      creation_date\n      status\n    }\n  }\n`;\n\ntype CustomThemeT = { red400: string; textNormal: string; colors: any };\nconst themedUseStyletron = createThemedUseStyletron<CustomThemeT>();\n\nconst Col = withStyle(Column, () => ({\n  '@media only screen and (max-width: 767px)': {\n    marginBottom: '20px',\n\n    ':last-child': {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = withStyle(Rows, () => ({\n  '@media only screen and (min-width: 768px)': {\n    alignItems: 'center',\n  },\n}));\n\nconst statusSelectOptions = [\n  { value: 'active', label: 'Active' },\n  { value: 'revoked', label: 'Revoked' },\n];\n\nexport default function Coupons() {\n  const dispatch = useDrawerDispatch();\n  const [checkedId, setCheckedId] = useState([]);\n  const [checked, setChecked] = useState(false);\n\n  const openDrawer = useCallback(\n    () => dispatch({ type: 'OPEN_DRAWER', drawerComponent: 'CAMPAING_FORM' }),\n    [dispatch]\n  );\n  const [status, setStatus] = useState([]);\n  const [search, setSearch] = useState('');\n  const [useCss, theme] = themedUseStyletron();\n  const active = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.primary,\n    },\n  });\n  const revoked = useCss({\n    ':before': {\n      content: '\"\"',\n      backgroundColor: theme.colors.red400,\n    },\n  });\n\n  const { data, error, refetch } = useQuery(GET_COUPONS);\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n  function handleSelect({ value }) {\n    setStatus(value);\n    if (value.length) {\n      refetch({ status: value[0].value, searchBy: search });\n    } else {\n      refetch({ status: null });\n    }\n  }\n\n  function handleSearch(event) {\n    const value = event.currentTarget.value;\n\n    setSearch(value);\n    refetch({\n      status: status.length ? status[0].value : null,\n      searchBy: value,\n    });\n  }\n  function onAllCheck(event) {\n    if (event.target.checked) {\n      const idx = data && data.coupons.map((coupon) => coupon.id);\n      setCheckedId(idx);\n    } else {\n      setCheckedId([]);\n    }\n    setChecked(event.target.checked);\n  }\n\n  function handleCheckbox(event) {\n    const { name } = event.currentTarget;\n    if (!checkedId.includes(name)) {\n      setCheckedId((prevState) => [...prevState, name]);\n    } else {\n      setCheckedId((prevState) => prevState.filter((id) => id !== name));\n    }\n  }\n\n  const numberToPercent = (num, total) => {\n    return (num * 100) / total;\n  };\n\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header\n            style={{\n              marginBottom: 30,\n              boxShadow: '0 0 5px rgba(0, 0 ,0, 0.05)',\n            }}\n          >\n            <Col md={2}>\n              <Heading>Campaigns</Heading>\n            </Col>\n\n            <Col md={10}>\n              <Row>\n                <Col md={3}>\n                  <Select\n                    options={statusSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    placeholder=\"Status\"\n                    value={status}\n                    searchable={false}\n                    onChange={handleSelect}\n                  />\n                </Col>\n\n                <Col md={5}>\n                  <Input\n                    value={search}\n                    placeholder=\"Ex: Search By Name\"\n                    onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n\n                <Col md={4}>\n                  <Button\n                    onClick={openDrawer}\n                    startEnhancer={() => <Plus />}\n                    overrides={{\n                      BaseButton: {\n                        style: ({ $theme, $size, $shape }) => {\n                          return {\n                            width: '100%',\n                            borderTopLeftRadius: '3px',\n                            borderTopRightRadius: '3px',\n                            borderBottomLeftRadius: '3px',\n                            borderBottomRightRadius: '3px',\n                          };\n                        },\n                      },\n                    }}\n                  >\n                    Create Campaign\n                  </Button>\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Wrapper style={{ boxShadow: '0 0 5px rgba(0, 0 , 0, 0.05)' }}>\n            <TableWrapper>\n              <StyledTable $gridTemplateColumns=\"minmax(70px, 70px) minmax(70px, 70px) minmax(200px, auto) minmax(200px, auto) minmax(200px, max-content) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto)\">\n                <StyledHeadCell>\n                  <Checkbox\n                    type=\"checkbox\"\n                    value=\"checkAll\"\n                    checked={checked}\n                    onChange={onAllCheck}\n                    overrides={{\n                      Checkmark: {\n                        style: {\n                          borderTopWidth: '2px',\n                          borderRightWidth: '2px',\n                          borderBottomWidth: '2px',\n                          borderLeftWidth: '2px',\n                          borderTopLeftRadius: '4px',\n                          borderTopRightRadius: '4px',\n                          borderBottomRightRadius: '4px',\n                          borderBottomLeftRadius: '4px',\n                        },\n                      },\n                    }}\n                  />\n                </StyledHeadCell>\n                <StyledHeadCell>ID</StyledHeadCell>\n                <StyledHeadCell>Campaigns Name</StyledHeadCell>\n                <StyledHeadCell>Code</StyledHeadCell>\n                <StyledHeadCell>Remaining coupon</StyledHeadCell>\n                <StyledHeadCell>Expiration Date</StyledHeadCell>\n                <StyledHeadCell>Creation Date</StyledHeadCell>\n                <StyledHeadCell>Status</StyledHeadCell>\n\n                {data ? (\n                  data.coupons.length ? (\n                    data.coupons\n                      .map((item) => Object.values(item))\n                      .map((row, index) => {\n                        return (\n                          <React.Fragment key={index}>\n                            <StyledBodyCell>\n                              <Checkbox\n                                name={row[1]}\n                                checked={checkedId.includes(row[1])}\n                                onChange={handleCheckbox}\n                                overrides={{\n                                  Checkmark: {\n                                    style: {\n                                      borderTopWidth: '2px',\n                                      borderRightWidth: '2px',\n                                      borderBottomWidth: '2px',\n                                      borderLeftWidth: '2px',\n                                      borderTopLeftRadius: '4px',\n                                      borderTopRightRadius: '4px',\n                                      borderBottomRightRadius: '4px',\n                                      borderBottomLeftRadius: '4px',\n                                    },\n                                  },\n                                }}\n                              />\n                            </StyledBodyCell>\n                            <StyledBodyCell>{row[1]}</StyledBodyCell>\n                            <StyledBodyCell>{row[2]}</StyledBodyCell>\n                            <StyledBodyCell>{row[3]}</StyledBodyCell>\n                            <StyledBodyCell>\n                              <ProgressWrapper>\n                                <ProgressBar\n                                  value={numberToPercent(row[4], row[5])}\n                                  successValue={100}\n                                  overrides={{\n                                    Bar: {\n                                      style: () => {\n                                        return {\n                                          backgroundColor: '#F2F2F2',\n                                          marginLeft: '0px',\n                                          marginRight: '0px',\n                                          height: '4px',\n                                          borderTopLeftRadius: '5px',\n                                          borderTopRightRadius: '5px',\n                                          borderBottomLeftRadius: '5px',\n                                          borderBottomRightRadius: '5px',\n                                          position: 'relative',\n                                        };\n                                      },\n                                    },\n                                    BarProgress: {\n                                      style: ({ $theme }) => {\n                                        return {\n                                          backgroundColor:\n                                            $theme.colors.primary,\n                                          borderTopLeftRadius: '5px',\n                                          borderTopRightRadius: '5px',\n                                          borderBottomLeftRadius: '5px',\n                                          borderBottomRightRadius: '5px',\n                                        };\n                                      },\n                                    },\n                                  }}\n                                />\n\n                                <ProgressText>{`${row[4] ? row[4] : 0} of ${\n                                  row[5]\n                                } codes remaining`}</ProgressText>\n                              </ProgressWrapper>\n                            </StyledBodyCell>\n                            <StyledBodyCell>\n                              {dayjs(row[6]).format('DD MMM YYYY')}\n                            </StyledBodyCell>\n                            <StyledBodyCell>\n                              {dayjs(row[7]).format('DD MMM YYYY')}\n                            </StyledBodyCell>\n                            <StyledBodyCell>\n                              <Status\n                                className={\n                                  row[8] === 'active'\n                                    ? active\n                                    : row[8] === 'revoked'\n                                    ? revoked\n                                    : ''\n                                }\n                              >\n                                {row[8]}\n                              </Status>\n                            </StyledBodyCell>\n                          </React.Fragment>\n                        );\n                      })\n                  ) : (\n                    <NoResult\n                      hideButton={false}\n                      style={{\n                        gridColumnStart: '1',\n                        gridColumnEnd: 'one',\n                      }}\n                    />\n                  )\n                ) : null}\n              </StyledTable>\n            </TableWrapper>\n          </Wrapper>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n"],"sourceRoot":""}