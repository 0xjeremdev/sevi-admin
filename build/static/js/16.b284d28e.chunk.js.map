{"version":3,"sources":["components/FlexBox/FlexBox.ts","components/Button/Button.tsx","components/Button/Button.style.tsx","components/Input/Input.tsx","assets/icons/CaretDownIcon.tsx","components/Select/Select.tsx","components/FormFields/FormFields.tsx","components/DrawerBox/DrawerBox.tsx","containers/DrawerItems/DrawerItems.style.tsx","assets/icons/UploadIcon.tsx","components/Uploader/Uploader.tsx","components/Textarea/Textarea.tsx","containers/SiteSettingForm/SiteSettingForm.tsx"],"names":["Grid","styled","Grids","Row","Rows","margin","marginBottom","Col","Cols","padding","Button","children","overrides","props","BaseButton","style","$theme","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","value","buttonBorderRadius","SHAPE","pill","round","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","getBorderRadiiStyles","Input","color","colors","textDark","typography","fontBold16","getInputFontStyle","CaretDownIcon","xmlns","width","height","viewBox","data-name","d","transform","fill","getContainerFontStyle","fontBold14","SelectArrow","Popover","Body","zIndex","Placeholder","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","Title","font18","marginTop","textAlign","Label","FormFields","fontBold12","red400","marginLeft","Block","display","flexDirection","FormLabel","FormTitle","DrawerBox","borderRadius","backgroundColor","Form","backgroundF7","paddingBottom","DrawerTitleWrapper","alignItems","justifyContent","position","DrawerTitle","fontBold18","FieldDetails","font14","ButtonGroup","bottom","right","boxShadow","UploadIcon","Text","fontFamily","primaryFontFamily","TextHighlighted","primary","Container","flex","borderWidth","borderColor","borderStyle","outline","transition","cursor","ThumbsContainer","flexWrap","Thumb","borders","borderEA","marginRight","boxSizing","thumbInner","minWidth","overflow","img","Uploader","onChange","imageURL","useState","name","preview","files","setFiles","useDropzone","accept","multiple","onDrop","useCallback","acceptedFiles","map","file","Object","assign","URL","createObjectURL","getRootProps","getInputProps","thumbs","key","src","alt","useEffect","forEach","revokeObjectURL","className","Textarea","options","label","SiteSettingsForm","useForm","register","handleSubmit","setValue","category","setCategory","React","description","setDescription","fluid","onSubmit","data","console","log","md","inputRef","required","maxLength","e","target","labelKey","valueKey","placeholder","searchable","type"],"mappings":"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","file":"static/js/16.b284d28e.chunk.js","sourcesContent":["import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold16,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import React from 'react';\nexport const CaretDownIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='10'\n      height='5'\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill='currentColor'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from 'assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\nimport { styled } from \"baseui\";\n\nconst Title = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.font18,\n  marginTop: \"0\",\n  marginBottom: \"0\",\n  color: $theme.colors.textDark,\n  textAlign: \"center\"\n}));\n\nconst Label = styled(\"label\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  marginBottom: \"10px\",\n  color: $theme.colors.textDark\n}));\n\nconst Msg = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.fontBold12,\n  color: $theme.colors.red400,\n  marginTop: \"5px\",\n  marginLeft: \"auto\"\n}));\n\nexport const FormFields = ({ children }) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            display: \"flex\",\n            flexDirection: \"column\",\n            margin: \"20px 0\",\n\n            \":first-child\": {\n              marginTop: 0\n            },\n\n            \":last-child\": {\n              marginBottom: 0\n            },\n\n            \":only-child\": {\n              margin: 0\n            }\n          }\n        }\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport const FormLabel = ({ children }) => {\n  return <Label>{children}</Label>;\n};\n\nexport const FormTitle = ({ children }) => {\n  return <Title>{children}</Title>;\n};\n\nexport const Error = ({ children }) => {\n  return <Msg>{children}</Msg>;\n};\n","import React from \"react\";\nimport { Block } from \"baseui/block\";\n\nconst DrawerBox = ({ overrides, children }: any) => {\n  return (\n    <Block\n      overrides={{\n        Block: {\n          style: {\n            width: \"100%\",\n            height: \"auto\",\n            padding: \"30px\",\n            borderRadius: \"3px\",\n            backgroundColor: \"#ffffff\"\n          }\n        },\n        ...overrides\n      }}\n    >\n      {children}\n    </Block>\n  );\n};\n\nexport default DrawerBox;\n","import { styled } from \"baseui\";\n\nexport const Form = styled(\"form\", ({ $theme }) => ({\n  // minHeight: '100vh',\n  backgroundColor: $theme.colors.backgroundF7,\n  paddingBottom: \"100px\"\n}));\n\nexport const DrawerTitleWrapper = styled(\"div\", ({ $theme }) => ({\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"space-between\",\n  margin: \"-55px 0 30px\",\n  position: \"fixed\"\n}));\n\nexport const DrawerTitle = styled(\"h3\", ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  margin: 0,\n  color: $theme.colors.textDark\n}));\n\nexport const FieldDetails = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  padding: \"28px 0 15px\",\n  color: $theme.colors.textNormal,\n  display: \"block\",\n\n  \"@media only screen and (max-width: 991px)\": {\n    padding: \"30px 0\"\n  }\n}));\n\nexport const ButtonGroup = styled(\"div\", ({ $theme }) => ({\n  padding: \"30px 60px\",\n  display: \"flex\",\n  alignItems: \"center\",\n  position: \"fixed\",\n  bottom: \"0\",\n  right: \"0\",\n  width: \"100%\",\n  backgroundColor: \"#ffffff\",\n  boxShadow: \"0 0 3px rgba(0, 0, 0, 0.1)\",\n\n  \"@media only screen and (max-width: 767px)\": {\n    padding: \"20px 30px\"\n  }\n}));\n","import React from 'react';\nexport const UploadIcon = ({\n  color = 'currentColor',\n  width = '41px',\n  height = '30px',\n}) => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width={width}\n      height={height}\n      viewBox='0 0 40.909 30'\n    >\n      <g transform='translate(0 -73.091)'>\n        <path\n          data-name='Path 2125'\n          d='M39.129,89.827A8.064,8.064,0,0,0,34.58,86.94,5.446,5.446,0,0,0,30,78.546a5.207,5.207,0,0,0-3.537,1.321,10.921,10.921,0,0,0-10.1-6.776,10.511,10.511,0,0,0-7.713,3.2A10.508,10.508,0,0,0,5.454,84q0,.277.043.916A9.528,9.528,0,0,0,0,93.546a9.193,9.193,0,0,0,2.8,6.743,9.191,9.191,0,0,0,6.744,2.8H32.728a8.172,8.172,0,0,0,6.4-13.264Zm-12.06-.575a.656.656,0,0,1-.479.2H21.818v7.5a.691.691,0,0,1-.681.681H17.045a.691.691,0,0,1-.682-.681v-7.5H11.59a.655.655,0,0,1-.681-.681.8.8,0,0,1,.213-.512L18.6,80.783a.722.722,0,0,1,.98,0l7.5,7.5a.663.663,0,0,1,.191.49A.656.656,0,0,1,27.07,89.252Z'\n          transform='translate(0)'\n          fill='#e6e6e6'\n        />\n      </g>\n    </svg>\n  );\n};\n","import React, { useEffect, useState, useCallback } from \"react\";\nimport { useDropzone } from \"react-dropzone\";\nimport { styled } from \"baseui\";\nimport { UploadIcon } from \"assets/icons/UploadIcon\";\n\nconst Text = styled(\"span\", ({ $theme }) => ({\n  ...$theme.typography.font14,\n  fontFamily: $theme.typography.primaryFontFamily,\n  color: $theme.colors.textDark,\n  marginTop: \"15px\",\n  textAlign: \"center\",\n}));\n\nconst TextHighlighted = styled(\"span\", ({ $theme }) => ({\n  color: $theme.colors.primary,\n  fontWeight: \"bold\",\n}));\n\nconst Container = styled(\"div\", ({ props }) => ({\n  flex: \"1\",\n  display: \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"center\",\n  padding: \"30px\",\n  borderWidth: \"2px\",\n  borderRadius: \"2px\",\n  borderColor: \"#E6E6E6\",\n  borderStyle: \"dashed\",\n  backgroundColor: \"#ffffff\",\n  color: \"#bdbdbd\",\n  outline: \"none\",\n  transition: \"border 0.24s ease-in-out\",\n  cursor: \"pointer\",\n}));\n\nconst ThumbsContainer = styled(\"aside\", () => ({\n  display: \"flex\",\n  flexDirection: \"row\",\n  flexWrap: \"wrap\",\n  marginTop: \"16px\",\n}));\n\nconst Thumb = styled(\"div\", ({ $theme }) => ({\n  ...$theme.borders.borderEA,\n  display: \"inline-flex\",\n  borderRadius: \"2px\",\n  marginBottom: \"8px\",\n  marginRight: \"8px\",\n  width: \"100px\",\n  height: \"100px\",\n  padding: \"4px\",\n  boxSizing: \"border-box\",\n}));\n\nconst thumbInner = {\n  display: \"flex\",\n  minWidth: 0,\n  overflow: \"hidden\",\n};\n\nconst img = {\n  display: \"block\",\n  width: \"auto\",\n  height: \"100%\",\n};\n\nfunction Uploader({ onChange, imageURL }: any) {\n  const [files, setFiles] = useState(\n    imageURL ? [{ name: \"demo\", preview: imageURL }] : []\n  );\n  const { getRootProps, getInputProps } = useDropzone({\n    accept: \"image/*\",\n    multiple: false,\n    onDrop: useCallback(\n      (acceptedFiles) => {\n        setFiles(\n          acceptedFiles.map((file) =>\n            Object.assign(file, {\n              preview: URL.createObjectURL(file),\n            })\n          )\n        );\n        onChange(acceptedFiles);\n      },\n      [onChange]\n    ),\n  });\n\n  const thumbs = files.map((file) => (\n    <Thumb key={file.name}>\n      <div style={thumbInner}>\n        <img src={file.preview} style={img} alt={file.name} />\n      </div>\n    </Thumb>\n  ));\n\n  useEffect(\n    () => () => {\n      // Make sure to revoke the data uris to avoid memory leaks\n      files.forEach((file) => URL.revokeObjectURL(file.preview));\n    },\n    [files]\n  );\n\n  return (\n    <section className=\"container uploader\">\n      <Container {...getRootProps()}>\n        <input {...getInputProps()} />\n        <UploadIcon />\n        <Text>\n          <TextHighlighted>Drag/Upload</TextHighlighted> your image here.\n        </Text>\n      </Container>\n      {thumbs && <ThumbsContainer>{thumbs}</ThumbsContainer>}\n    </section>\n  );\n}\n\nexport default Uploader;\n","import React from 'react';\nimport { Textarea as BaseTextarea, SIZE } from 'baseui/textarea';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold14,\n  };\n};\n\nexport const Textarea = ({ ...props }) => {\n  return (\n    <BaseTextarea\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\n","import React, { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport Uploader from 'components/Uploader/Uploader';\nimport Input from 'components/Input/Input';\nimport { Textarea } from 'components/Textarea/Textarea';\nimport Select from 'components/Select/Select';\nimport Button from 'components/Button/Button';\nimport DrawerBox from 'components/DrawerBox/DrawerBox';\nimport { Grid, Row, Col } from 'components/FlexBox/FlexBox';\nimport { Form, FieldDetails } from '../DrawerItems/DrawerItems.style';\nimport { FormFields, FormLabel } from 'components/FormFields/FormFields';\n\nconst options = [\n  { value: 'active', label: 'Active' },\n  { value: 'maintenance', label: 'Maintenance' },\n  { value: 'turn-off', label: 'Down' },\n];\ntype Props = {};\nconst SiteSettingsForm: React.FC<Props> = () => {\n  const { register, handleSubmit, setValue } = useForm();\n  const onSubmit = (data) => console.log(data);\n  const [category, setCategory] = useState([]);\n  const [description, setDescription] = React.useState('');\n  const handleMultiChange = ({ value }) => {\n    setValue('reactSelect', value);\n    setCategory(value);\n  };\n  const handleUploader = (files) => {\n    setValue('reactDropzone', files);\n  };\n  React.useEffect(() => {\n    register({ name: 'reactSelect' });\n    register({ name: 'reactDropzone' });\n  }, [register]);\n  return (\n    <Grid fluid={true}>\n      <Form onSubmit={handleSubmit(onSubmit)} style={{ paddingBottom: 0 }}>\n        <Row>\n          <Col md={4}>\n            <FieldDetails>Upload your site logo here</FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <Uploader onChange={handleUploader} />\n            </DrawerBox>\n          </Col>\n        </Row>\n\n        <Row>\n          <Col md={4}>\n            <FieldDetails>\n              Add your site description and necessary information from here\n            </FieldDetails>\n          </Col>\n\n          <Col md={8}>\n            <DrawerBox>\n              <FormFields>\n                <FormLabel>Site Name</FormLabel>\n                <Input\n                  name=\"site_name\"\n                  inputRef={register({ required: true, maxLength: 20 })}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Site Description</FormLabel>\n                <Textarea\n                  value={description}\n                  onChange={(e) => setDescription(e.target.value)}\n                />\n              </FormFields>\n\n              <FormFields>\n                <FormLabel>Status</FormLabel>\n                <Select\n                  options={options}\n                  labelKey=\"label\"\n                  valueKey=\"value\"\n                  placeholder=\"Choose current status\"\n                  value={category}\n                  searchable={false}\n                  onChange={handleMultiChange}\n                  overrides={{\n                    Placeholder: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    DropdownListItem: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    OptionContent: {\n                      style: ({ $theme, $selected }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $selected\n                            ? $theme.colors.textDark\n                            : $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    SingleValue: {\n                      style: ({ $theme }) => {\n                        return {\n                          ...$theme.typography.fontBold14,\n                          color: $theme.colors.textNormal,\n                        };\n                      },\n                    },\n                    Popover: {\n                      props: {\n                        overrides: {\n                          Body: {\n                            style: { zIndex: 5 },\n                          },\n                        },\n                      },\n                    },\n                  }}\n                />\n              </FormFields>\n\n              <FormFields>\n                <Button\n                  type=\"submit\"\n                  overrides={{\n                    BaseButton: {\n                      style: ({ $theme }) => ({\n                        width: '50%',\n                        marginLeft: 'auto',\n                        borderTopLeftRadius: '3px',\n                        borderTopRightRadius: '3px',\n                        borderBottomLeftRadius: '3px',\n                        borderBottomRightRadius: '3px',\n                      }),\n                    },\n                  }}\n                >\n                  Submit\n                </Button>\n              </FormFields>\n            </DrawerBox>\n          </Col>\n        </Row>\n      </Form>\n    </Grid>\n  );\n};\n\nexport default SiteSettingsForm;\n"],"sourceRoot":""}