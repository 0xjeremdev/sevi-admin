{"version":3,"sources":["components/FlexBox/FlexBox.ts","components/Button/Button.tsx","components/Button/Button.style.tsx","components/Input/Input.tsx","assets/icons/CaretDownIcon.tsx","components/Select/Select.tsx","components/Wrapper.style.tsx","components/NoResult/no-result.svg","components/NoResult/NoResult.style.tsx","components/NoResult/NoResult.tsx","components/CheckBox/CheckBox.tsx","containers/Orders/Orders.style.tsx","containers/Orders/Orders.tsx"],"names":["Grid","styled","Grids","Row","Rows","margin","marginBottom","Col","Cols","padding","Button","children","overrides","props","BaseButton","style","$theme","$size","$shape","SIZE","compact","large","paddingLeft","sizing","scale25","paddingRight","getPaddingStyles","value","buttonBorderRadius","SHAPE","pill","round","borderTopRightRadius","borderBottomRightRadius","borderTopLeftRadius","borderBottomLeftRadius","getBorderRadiiStyles","Input","color","colors","textDark","typography","fontBold16","getInputFontStyle","CaretDownIcon","xmlns","width","height","viewBox","data-name","d","transform","fill","getContainerFontStyle","fontBold14","SelectArrow","Popover","Body","zIndex","Placeholder","SingleValue","lineHeight","DropdownListItem","fontSize","fontWeight","OptionContent","$selected","textNormal","DropdownOption","Wrapper","backgroundColor","Header","display","justifyContent","alignItems","flex","flexDirection","flexWrap","Heading","fontBold18","paddingTop","module","exports","NoResultWrapper","h3","p","ImageWrapper","marginTop","maxWidth","img","ButtonWrapper","cursor","borderRadius","fontFamily","textDecoration","textTransform","border","transition","NoResult","id","onClick","hideButton","src","NoResultSvg","alt","Object","freeze","top","right","bottom","left","Checkbox","TableWrapper","StyledTable","withStyle","BaseStyledTable","alignContent","StyledHeadCell","BaseStyledHeadCell","boxShadow","borderTopColor","borderRightColor","borderBottomColor","borderLeftColor","alignSelf","StyledCell","BaseStyledCell","GET_ORDERS","gql","themedUseStyletron","createThemedUseStyletron","Status","content","borders","borderE6","marginRight","Column","statusSelectOptions","label","limitSelectOptions","Orders","useState","checkedId","setCheckedId","checked","setChecked","useCss","theme","sent","primary","failed","red400","processing","paid","blue400","status","setStatus","limit","setLimit","search","setSearch","useQuery","data","error","refetch","message","handleCheckbox","event","name","currentTarget","includes","prevState","filter","fluid","md","xs","Select","options","labelKey","valueKey","placeholder","searchable","onChange","length","searchText","clearable","$gridTemplateColumns","type","target","idx","orders","map","order","Checkmark","borderTopWidth","borderRightWidth","borderBottomWidth","borderLeftWidth","item","values","row","index","Fragment","key","dayjs","format","className","toLowerCase","gridColumnStart","gridColumnEnd"],"mappings":"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","file":"static/js/18.586b59b4.chunk.js","sourcesContent":["import { styled } from 'baseui';\nimport { Grid as Grids, Row as Rows, Col as Cols } from 'react-flexbox-grid';\n\n// export const Grid = styled(Grids, ({ $theme }) => ({\n//   &.container,\n//   &.container-fluid {\n//     padding: 0 15px;\n//   }\n// }));\n\nexport const Grid = styled(Grids, () => ({}));\n\nexport const Row = styled(Rows, () => ({\n  margin: '0 -15px 30px',\n\n  ':last-child': {\n    marginBottom: '0px',\n  },\n}));\n\nexport const Col = styled(Cols, () => ({\n  padding: '0 15px',\n}));\n","import React from 'react';\nimport { Button as BaseButton, SIZE, SHAPE, KIND } from 'baseui/button';\nimport { getPaddingStyles, getBorderRadiiStyles } from './Button.style';\n\nconst Button = ({ children, overrides, ...props }: any) => {\n  return (\n    <BaseButton\n      {...props}\n      overrides={{\n        BaseButton: {\n          style: ({ $theme, $size, $shape }) => {\n            return {\n              ...getPaddingStyles({ $theme, $size }),\n              ...getBorderRadiiStyles({ $theme, $size, $shape }),\n            };\n          },\n        },\n        ...overrides,\n      }}\n    >\n      {children}\n    </BaseButton>\n  );\n};\n\nexport { SIZE, SHAPE, KIND };\nexport default Button;\n","import { SIZE, SHAPE } from 'baseui/button';\n\nexport const getPaddingStyles = ({ $theme, $size }) => {\n  switch ($size) {\n    case SIZE.compact:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    case SIZE.large:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n    default:\n      return {\n        paddingLeft: $theme.sizing.scale25,\n        paddingRight: $theme.sizing.scale25,\n      };\n  }\n};\n\nexport const getBorderRadiiStyles = ({ $theme, $size, $shape }) => {\n  let value = $theme.buttonBorderRadius;\n\n  if ($shape === SHAPE.pill) {\n    if ($size === SIZE.compact) {\n      value = '30px';\n    } else if ($size === SIZE.large) {\n      value = '42px';\n    } else {\n      value = '38px';\n    }\n  } else if ($shape === SHAPE.round) {\n    value = '50%';\n  }\n\n  return {\n    borderTopRightRadius: value,\n    borderBottomRightRadius: value,\n    borderTopLeftRadius: value,\n    borderBottomLeftRadius: value,\n  };\n};\n","import React from 'react';\nimport { Input as BaseInput, SIZE } from 'baseui/input';\n\nconst getInputFontStyle = ({ $theme }) => {\n  return {\n    color: $theme.colors.textDark,\n    ...$theme.typography.fontBold16,\n  };\n};\n\nconst Input = ({ ...props }) => {\n  return (\n    <BaseInput\n      overrides={{\n        Input: {\n          style: ({ $theme }) => {\n            return {\n              ...getInputFontStyle({ $theme }),\n            };\n          },\n        },\n      }}\n      {...props}\n    />\n  );\n};\n\nexport { SIZE };\nexport default Input;\n","import React from 'react';\nexport const CaretDownIcon = () => {\n  return (\n    <svg\n      xmlns='http://www.w3.org/2000/svg'\n      width='10'\n      height='5'\n      viewBox='0 0 10 5'\n    >\n      <path\n        data-name='_ionicons_svg_md-arrow-dropdown (2)'\n        d='M128,192l5,5,5-5Z'\n        transform='translate(-128 -192)'\n        fill='currentColor'\n      />\n    </svg>\n  );\n};\n","import * as React from 'react';\nimport { Select } from 'baseui/select';\nimport { CaretDownIcon } from 'assets/icons/CaretDownIcon';\n\nexport const getContainerFontStyle = ({ $theme }) => {\n  return $theme.typography.fontBold14;\n};\n\nexport default ({ ...props }) => {\n  return (\n    <Select\n      overrides={{\n        SelectArrow: () => {\n          return <CaretDownIcon />;\n        },\n        Popover: {\n          props: {\n            overrides: {\n              Body: {\n                style: { zIndex: 1 },\n              },\n            },\n          },\n        },\n        Placeholder: {\n          style: ({ $theme }) => ({\n            color: $theme.colors.textDark,\n            ...getContainerFontStyle({ $theme }),\n          }),\n        },\n        SingleValue: {\n          style: ({ $theme }) => ({\n            ...getContainerFontStyle({ $theme }),\n            color: $theme.colors.textDark,\n            lineHeight: '1.5',\n          }),\n        },\n        DropdownListItem: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n        OptionContent: {\n          style: ({ $theme, $selected }) => {\n            return {\n              ...$theme.typography.fontBold14,\n              color: $selected\n                ? $theme.colors.textDark\n                : $theme.colors.textNormal,\n            };\n          },\n        },\n        DropdownOption: {\n          style: ({ $theme }) => ({\n            fontSize: '14px',\n            fontWeight: '700',\n            color: $theme.colors.textDark,\n          }),\n        },\n      }}\n      {...props}\n    />\n  );\n};\n","import { styled } from 'baseui';\n\nexport const Wrapper = styled('div', () => ({\n  backgroundColor: '#ffffff',\n}));\n\nexport const Header = styled('header', () => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  alignItems: 'center',\n  flex: '0 1 auto',\n  flexDirection: 'row',\n  flexWrap: 'wrap',\n  padding: '40px',\n  /* margin-bottom: 40px, */\n  backgroundColor: '#ffffff',\n\n  '@media only screen and (max-width: 990px)': {\n    padding: '20px',\n  },\n}));\n\nexport const Heading = styled('h2', ({ $theme }) => ({\n  ...$theme.typography.fontBold18,\n  color: $theme.colors.textDark,\n  margin: 0,\n}));\n\nexport const ButtonWrapper = styled('div', ({ $theme }) => ({\n  display: 'flex',\n  justifyContent: 'space-between',\n  paddingTop: '20px',\n}));\n","module.exports = __webpack_public_path__ + \"static/media/no-result.e1457eaf.svg\";","import { styled } from 'baseui';\n\nexport const NoResultWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  padding: '50px 20px',\n\n  h3: {\n    fontSize: '24px',\n    fontWeight: 700,\n    color: '#161f6a',\n    margin: '0 0 15px',\n  },\n\n  p: {\n    fontSize: '16px',\n    fontWeight: 400,\n    color: '#707070',\n    margin: 0,\n  },\n}));\n\nexport const ImageWrapper = styled('div', () => ({\n  marginTop: '50px',\n  width: '100%',\n  maxWidth: '600px',\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n\n  img: {\n    maxWidth: '100%',\n  },\n}));\n\nexport const ButtonWrapper = styled('div', () => ({\n  width: '100%',\n  display: 'flex',\n  justifyContent: 'center',\n  marginTop: '70px',\n}));\n\nexport const Button = styled('button', () => ({\n  cursor: 'pointer',\n  display: 'inline-flex',\n  alignItems: 'center',\n  justifyContent: 'center',\n  color: '#ffffff',\n  backgroundColor: '#009e7f',\n  height: '50px',\n  borderRadius: '3px',\n  fontFamily: `'Lato', sans-serif`,\n  fontSize: '16px',\n  fontWeight: 700,\n  textDecoration: 'none',\n  textTransform: 'capitalize',\n  padding: '0 30px',\n  border: 0,\n  transition: 'all 0.3s ease',\n}));\n","import React from \"react\";\nimport NoResultSvg from \"./no-result.svg\";\nimport { NoResultWrapper, ImageWrapper, ButtonWrapper } from \"./NoResult.style\";\nimport Button from \"../Button/Button\";\n// import { ArrowPrev } from '../AllSvgIcon';\n\ntype NoResultProps = {\n  id?: string;\n  onClick?: () => void;\n  hideButton?: boolean;\n  style?: any;\n};\n\nconst NoResult: React.FC<NoResultProps> = ({\n  id,\n  onClick,\n  hideButton = true,\n  style\n}) => {\n  return (\n    <NoResultWrapper id={id} style={style}>\n      <h3>Sorry, No result found :(</h3>\n\n      <ImageWrapper>\n        <img src={NoResultSvg} alt=\"No Result\" />\n      </ImageWrapper>\n\n      {hideButton ? (\n        <ButtonWrapper>\n          <div onClick={onClick}>\n            <Button>\n              Try Again Later\n              {/* <ArrowPrev /> Go Back */}\n            </Button>\n          </div>\n        </ButtonWrapper>\n      ) : null}\n    </NoResultWrapper>\n  );\n};\n\nexport default NoResult;\n","import React from 'react';\nimport { Checkbox as BaseCheckbox } from 'baseui/checkbox';\nexport { STYLE_TYPE } from 'baseui/checkbox';\n\nexport const LABEL_PLACEMENT = Object.freeze({\n  top: 'top',\n  right: 'right',\n  bottom: 'bottom',\n  left: 'left',\n});\n\nconst Checkbox = ({ ...props }) => {\n  return <BaseCheckbox {...props} />;\n};\n\nexport default Checkbox;\n","import { styled, withStyle } from 'baseui';\nimport {\n  StyledTable as BaseStyledTable,\n  StyledHeadCell as BaseStyledHeadCell,\n  StyledBodyCell as BaseStyledCell,\n} from 'baseui/table-grid';\n\nexport const TableWrapper = styled('div', () => ({\n  width: '100%',\n  height: '450px',\n}));\n\nexport const StyledTable = withStyle(BaseStyledTable, () => ({\n  borderTopLeftRadius: '0 !important',\n  borderTopRightRadius: '0 !important',\n  borderBottomLeftRadius: '0 !important',\n  borderBottomRightRadius: '0 !important',\n  alignContent: 'start',\n}));\n\nexport const StyledHeadCell = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n}));\n\nexport const StyledCell = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n}));\n\nexport const StyledHeadCellCenter = withStyle(BaseStyledHeadCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 700,\n  color: '#161F6A !important',\n  alignItems: 'center',\n  boxShadow: 'rgba(0, 0, 0, 0.16) 0px 1px 4px',\n  borderTopColor: 'rgba(0, 0, 0, 0.12)',\n  borderRightColor: 'rgba(0, 0, 0, 0.12)',\n  borderBottomColor: 'rgba(0, 0, 0, 0.12)',\n  borderLeftColor: 'rgba(0, 0, 0, 0.12)',\n  alignSelf: 'start',\n  justifyContent: 'center',\n}));\n\nexport const StyledCellCenter = withStyle(BaseStyledCell, () => ({\n  fontFamily: \"'Lato', sans-serif\",\n  fontWeight: 400,\n  color: '#161F6A !important',\n  alignSelf: 'center',\n  justifyContent: 'center',\n}));\n","import React, { useState } from \"react\";\nimport { styled, withStyle, createThemedUseStyletron } from \"baseui\";\nimport dayjs from \"dayjs\";\nimport { Grid, Row as Rows, Col as Column } from \"components/FlexBox/FlexBox\";\nimport Select from \"components/Select/Select\";\nimport Input from \"components/Input/Input\";\n\nimport { useQuery, gql } from \"@apollo/client\";\nimport { Wrapper, Header, Heading } from \"components/Wrapper.style\";\nimport Checkbox from \"components/CheckBox/CheckBox\";\n\nimport {\n  TableWrapper,\n  StyledTable,\n  StyledHeadCell,\n  StyledCell,\n} from \"./Orders.style\";\nimport NoResult from \"components/NoResult/NoResult\";\n\nconst GET_ORDERS = gql`\n  query getOrders($status: String, $limit: Int, $searchText: String) {\n    orders(status: $status, limit: $limit, searchText: $searchText) {\n      id\n      customer_id\n      creation_date\n      delivery_address\n      amount\n      payment_method\n      contact_number\n      status\n    }\n  }\n`;\n\ntype CustomThemeT = { red400: string; textNormal: string; colors: any };\nconst themedUseStyletron = createThemedUseStyletron<CustomThemeT>();\n\nconst Status = styled(\"div\", ({ $theme }) => ({\n  ...$theme.typography.fontBold14,\n  color: $theme.colors.textDark,\n  display: \"flex\",\n  alignItems: \"center\",\n  lineHeight: \"1\",\n  textTransform: \"capitalize\",\n\n  \":before\": {\n    content: '\"\"',\n    width: \"10px\",\n    height: \"10px\",\n    display: \"inline-block\",\n    borderTopLeftRadius: \"10px\",\n    borderTopRightRadius: \"10px\",\n    borderBottomRightRadius: \"10px\",\n    borderBottomLeftRadius: \"10px\",\n    backgroundColor: $theme.borders.borderE6,\n    marginRight: \"10px\",\n  },\n}));\n\nconst Col = withStyle(Column, () => ({\n  \"@media only screen and (max-width: 767px)\": {\n    marginBottom: \"20px\",\n\n    \":last-child\": {\n      marginBottom: 0,\n    },\n  },\n}));\n\nconst Row = withStyle(Rows, () => ({\n  \"@media only screen and (min-width: 768px)\": {\n    alignItems: \"center\",\n  },\n}));\n\nconst statusSelectOptions = [\n  { value: \"delivered\", label: \"Delivered\" },\n  { value: \"pending\", label: \"Pending\" },\n  { value: \"processing\", label: \"Processing\" },\n  { value: \"failed\", label: \"Failed\" },\n];\nconst limitSelectOptions = [\n  { value: 7, label: \"Last 7 orders\" },\n  { value: 15, label: \"Last 15 orders\" },\n  { value: 30, label: \"Last 30 orders\" },\n];\n\nexport default function Orders() {\n  const [checkedId, setCheckedId] = useState([]);\n  const [checked, setChecked] = useState(false);\n\n  const [useCss, theme] = themedUseStyletron();\n  const sent = useCss({\n    \":before\": {\n      content: '\"\"',\n      backgroundColor: theme.colors.primary,\n    },\n  });\n  const failed = useCss({\n    \":before\": {\n      content: '\"\"',\n      backgroundColor: theme.colors.red400,\n    },\n  });\n  const processing = useCss({\n    \":before\": {\n      content: '\"\"',\n      backgroundColor: theme.colors.textNormal,\n    },\n  });\n  const paid = useCss({\n    \":before\": {\n      content: '\"\"',\n      backgroundColor: theme.colors.blue400,\n    },\n  });\n\n  const [status, setStatus] = useState([]);\n  const [limit, setLimit] = useState([]);\n  const [search, setSearch] = useState([]);\n\n  const { data, error, refetch } = useQuery(GET_ORDERS);\n  if (error) {\n    return <div>Error! {error.message}</div>;\n  }\n\n  function handleStatus({ value }) {\n    setStatus(value);\n    if (value.length) {\n      refetch({\n        status: value[0].value,\n        limit: limit.length ? limit[0].value : null,\n      });\n    } else {\n      refetch({ status: null });\n    }\n  }\n\n  function handleLimit({ value }) {\n    setLimit(value);\n    if (value.length) {\n      refetch({\n        status: status.length ? status[0].value : null,\n        limit: value[0].value,\n      });\n    } else {\n      refetch({\n        limit: null,\n      });\n    }\n  }\n  function handleSearch(event) {\n    const { value } = event.currentTarget;\n    setSearch(value);\n    refetch({ searchText: value });\n  }\n  function onAllCheck(event) {\n    if (event.target.checked) {\n      const idx = data && data.orders.map((order) => order.id);\n      setCheckedId(idx);\n    } else {\n      setCheckedId([]);\n    }\n    setChecked(event.target.checked);\n  }\n\n  function handleCheckbox(event) {\n    const { name } = event.currentTarget;\n    if (!checkedId.includes(name)) {\n      setCheckedId((prevState) => [...prevState, name]);\n    } else {\n      setCheckedId((prevState) => prevState.filter((id) => id !== name));\n    }\n  }\n  return (\n    <Grid fluid={true}>\n      <Row>\n        <Col md={12}>\n          <Header\n            style={{\n              marginBottom: 30,\n              boxShadow: \"0 0 8px rgba(0, 0 ,0, 0.1)\",\n            }}\n          >\n            <Col md={3} xs={12}>\n              <Heading>Orders</Heading>\n            </Col>\n\n            <Col md={9} xs={12}>\n              <Row>\n                <Col md={3} xs={12}>\n                  <Select\n                    options={statusSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    placeholder=\"Status\"\n                    value={status}\n                    searchable={false}\n                    onChange={handleStatus}\n                  />\n                </Col>\n\n                <Col md={3} xs={12}>\n                  <Select\n                    options={limitSelectOptions}\n                    labelKey=\"label\"\n                    valueKey=\"value\"\n                    value={limit}\n                    placeholder=\"Order Limits\"\n                    searchable={false}\n                    onChange={handleLimit}\n                  />\n                </Col>\n\n                <Col md={6} xs={12}>\n                  <Input\n                    value={search}\n                    placeholder=\"Ex: Search By Address\"\n                    onChange={handleSearch}\n                    clearable\n                  />\n                </Col>\n              </Row>\n            </Col>\n          </Header>\n\n          <Wrapper style={{ boxShadow: \"0 0 5px rgba(0, 0 , 0, 0.05)\" }}>\n            <TableWrapper>\n              <StyledTable $gridTemplateColumns=\"minmax(70px, 70px) minmax(70px, 70px) minmax(150px, auto) minmax(150px, auto) minmax(200px, max-content) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto) minmax(150px, auto)\">\n                <StyledHeadCell>\n                  <Checkbox\n                    type=\"checkbox\"\n                    value=\"checkAll\"\n                    checked={checked}\n                    onChange={onAllCheck}\n                    overrides={{\n                      Checkmark: {\n                        style: {\n                          borderTopWidth: \"2px\",\n                          borderRightWidth: \"2px\",\n                          borderBottomWidth: \"2px\",\n                          borderLeftWidth: \"2px\",\n                          borderTopLeftRadius: \"4px\",\n                          borderTopRightRadius: \"4px\",\n                          borderBottomRightRadius: \"4px\",\n                          borderBottomLeftRadius: \"4px\",\n                        },\n                      },\n                    }}\n                  />\n                </StyledHeadCell>\n                <StyledHeadCell>ID</StyledHeadCell>\n                <StyledHeadCell>Customer ID</StyledHeadCell>\n                <StyledHeadCell>Time</StyledHeadCell>\n                <StyledHeadCell>Delivery Address</StyledHeadCell>\n                <StyledHeadCell>Amount</StyledHeadCell>\n                <StyledHeadCell>Payment Method</StyledHeadCell>\n                <StyledHeadCell>Contact</StyledHeadCell>\n                <StyledHeadCell>Status</StyledHeadCell>\n\n                {data ? (\n                  data.orders.length ? (\n                    data.orders\n                      .map((item) => Object.values(item))\n                      .map((row, index) => (\n                        <React.Fragment key={index}>\n                          <StyledCell>\n                            <Checkbox\n                              name={row[1]}\n                              checked={checkedId.includes(row[1])}\n                              onChange={handleCheckbox}\n                              overrides={{\n                                Checkmark: {\n                                  style: {\n                                    borderTopWidth: \"2px\",\n                                    borderRightWidth: \"2px\",\n                                    borderBottomWidth: \"2px\",\n                                    borderLeftWidth: \"2px\",\n                                    borderTopLeftRadius: \"4px\",\n                                    borderTopRightRadius: \"4px\",\n                                    borderBottomRightRadius: \"4px\",\n                                    borderBottomLeftRadius: \"4px\",\n                                  },\n                                },\n                              }}\n                            />\n                          </StyledCell>\n                          <StyledCell>{row[1]}</StyledCell>\n                          <StyledCell>{row[2]}</StyledCell>\n                          <StyledCell>\n                            {dayjs(row[3]).format(\"DD MMM YYYY\")}\n                          </StyledCell>\n                          <StyledCell>{row[4]}</StyledCell>\n                          <StyledCell>${row[5]}</StyledCell>\n                          <StyledCell>{row[6]}</StyledCell>\n                          <StyledCell>{row[7]}</StyledCell>\n                          <StyledCell style={{ justifyContent: \"center\" }}>\n                            <Status\n                              className={\n                                row[8].toLowerCase() === \"delivered\"\n                                  ? sent\n                                  : row[8].toLowerCase() === \"pending\"\n                                  ? paid\n                                  : row[8].toLowerCase() === \"processing\"\n                                  ? processing\n                                  : row[8].toLowerCase() === \"failed\"\n                                  ? failed\n                                  : \"\"\n                              }\n                            >\n                              {row[8]}\n                            </Status>\n                          </StyledCell>\n                        </React.Fragment>\n                      ))\n                  ) : (\n                    <NoResult\n                      hideButton={false}\n                      style={{\n                        gridColumnStart: \"1\",\n                        gridColumnEnd: \"one\",\n                      }}\n                    />\n                  )\n                ) : null}\n              </StyledTable>\n            </TableWrapper>\n          </Wrapper>\n        </Col>\n      </Row>\n    </Grid>\n  );\n}\n"],"sourceRoot":""}